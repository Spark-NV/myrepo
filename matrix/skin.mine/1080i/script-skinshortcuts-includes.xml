<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>$LOCALIZE[20342]</label>
			<label2 />
			<icon>icons/mainmenu/movies.png</icon>
			<thumb />
			<property name="labelID">20342</property>
			<property name="defaultID">movies</property>
			<property name="background">$VAR[Movies.Art]</property>
			<property name="widget">NewMovies</property>
			<property name="widgetName">$LOCALIZE[31422]</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">$VAR[RecentlyAddedMoviesVar]</property>
			<property name="widgetArtwork">Poster</property>
			<property name="widget.2">InProgressMovies</property>
			<property name="widgetName.2">$LOCALIZE[31425]</property>
			<property name="widgetType.2">movies</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">special://skin/extras/playlists/movies_inprogress.xsp</property>
			<property name="widgetArtwork.2">Poster</property>
			<property name="widget.3">RandomMovies</property>
			<property name="widgetName.3">$LOCALIZE[31424]</property>
			<property name="widgetType.3">movies</property>
			<property name="widgetTarget.3">videos</property>
			<property name="widgetPath.3">special://skin/extras/playlists/movies_random.xsp</property>
			<property name="widgetArtwork.3">Poster</property>
			<property name="widgetTarget.4">false</property>
			<property name="widgetTarget.5">false</property>
			<property name="widgetTarget.6">false</property>
			<property name="horizontalWidgetPos">Standard</property>
			<property name="EHPlaylistFanart">false</property>
			<property name="UseBottomShortcuts">false</property>
			<property name="centerShelves">false</property>
			<property name="showShelvesInfo">false</property>
			<property name="widgetTwoShelves">false</property>
			<property name="widgetThreeShelves">false</property>
			<property name="widgetThreeShelvesLarge">false</property>
			<property name="widgetArtwork.4">Poster</property>
			<property name="widgetArtwork.5">Poster</property>
			<property name="widgetArtwork.6">Poster</property>
			<property name="widgetPosterLabel">false</property>
			<property name="widgetPosterLabel.2">false</property>
			<property name="widgetPosterLabel.3">false</property>
			<property name="widgetPosterLabel.4">false</property>
			<property name="widgetPosterLabel.5">false</property>
			<property name="widgetPosterLabel.6">false</property>
			<property name="widgetLabelScroll">false</property>
			<property name="widgetLabelScroll.2">false</property>
			<property name="widgetLabelScroll.3">false</property>
			<property name="widgetLabelScroll.4">false</property>
			<property name="widgetLabelScroll.5">false</property>
			<property name="widgetLabelScroll.6">false</property>
			<property name="widgetShowTextbox">true</property>
			<property name="widgetShowTextbox.2">true</property>
			<property name="widgetShowTextbox.3">true</property>
			<property name="widgetShowTextbox.4">true</property>
			<property name="widgetShowTextbox.5">true</property>
			<property name="widgetShowTextbox.6">true</property>
			<property name="widgetDouble">false</property>
			<property name="widgetDouble.2">false</property>
			<property name="widgetDouble.3">false</property>
			<property name="widgetDouble.4">false</property>
			<property name="widgetDouble.5">false</property>
			<property name="widgetDouble.6">false</property>
			<property name="widgetTriple">false</property>
			<property name="widgetTriple.2">false</property>
			<property name="widgetTriple.3">false</property>
			<property name="widgetTriple.4">false</property>
			<property name="widgetTriple.5">false</property>
			<property name="widgetTriple.6">false</property>
			<property name="widgetType.4">none</property>
			<property name="widgetType.5">none</property>
			<property name="widgetType.6">none</property>
			<property name="widgetContent">default</property>
			<property name="widgetContent.2">default</property>
			<property name="widgetContent.3">default</property>
			<property name="widgetContent.4">default</property>
			<property name="widgetContent.5">default</property>
			<property name="widgetContent.6">default</property>
			<property name="doInfoPopup">false</property>
			<property name="doInfoPopup.2">false</property>
			<property name="doInfoPopup.3">false</property>
			<property name="doInfoPopup.4">false</property>
			<property name="doInfoPopup.5">false</property>
			<property name="doInfoPopup.6">false</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(videos,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(videos,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-20342</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>$LOCALIZE[20343]</label>
			<label2 />
			<icon>icons/mainmenu/tv.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<property name="background">$VAR[TVShows.Art]</property>
			<property name="widget">NewEpisodes</property>
			<property name="widgetName">$LOCALIZE[31441]</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">$VAR[RecentlyAddedEpisodesVar]</property>
			<property name="widgetArtwork">Thumb</property>
			<property name="widget.2">InProgressEpisodes</property>
			<property name="widgetName.2">$LOCALIZE[31444]</property>
			<property name="widgetType.2">episodes</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">special://skin/extras/playlists/episodes_inprogress.xsp</property>
			<property name="widgetArtwork.2">Thumb</property>
			<property name="widget.3">RecentTvShows</property>
			<property name="widgetName.3">$LOCALIZE[31434]</property>
			<property name="widgetType.3">tvshows</property>
			<property name="widgetTarget.3">videos</property>
			<property name="widgetPath.3">$VAR[RecentlyPlayedTVShowsVar]</property>
			<property name="widgetArtwork.3">Poster</property>
			<property name="widget.4">RandomTvShows</property>
			<property name="widgetName.4">$LOCALIZE[31435]</property>
			<property name="widgetType.4">tvshows</property>
			<property name="widgetTarget.4">videos</property>
			<property name="widgetPath.4">special://skin/extras/playlists/tvshows_random.xsp</property>
			<property name="widgetArtwork.4">Poster</property>
			<property name="widgetTarget.5">false</property>
			<property name="widgetTarget.6">false</property>
			<property name="horizontalWidgetPos">Standard</property>
			<property name="EHPlaylistFanart">false</property>
			<property name="UseBottomShortcuts">false</property>
			<property name="centerShelves">false</property>
			<property name="showShelvesInfo">false</property>
			<property name="widgetTwoShelves">false</property>
			<property name="widgetThreeShelves">false</property>
			<property name="widgetThreeShelvesLarge">false</property>
			<property name="widgetArtwork.5">Poster</property>
			<property name="widgetArtwork.6">Poster</property>
			<property name="widgetPosterLabel">false</property>
			<property name="widgetPosterLabel.2">false</property>
			<property name="widgetPosterLabel.3">false</property>
			<property name="widgetPosterLabel.4">false</property>
			<property name="widgetPosterLabel.5">false</property>
			<property name="widgetPosterLabel.6">false</property>
			<property name="widgetLabelScroll">false</property>
			<property name="widgetLabelScroll.2">false</property>
			<property name="widgetLabelScroll.3">false</property>
			<property name="widgetLabelScroll.4">false</property>
			<property name="widgetLabelScroll.5">false</property>
			<property name="widgetLabelScroll.6">false</property>
			<property name="widgetShowTextbox">true</property>
			<property name="widgetShowTextbox.2">true</property>
			<property name="widgetShowTextbox.3">true</property>
			<property name="widgetShowTextbox.4">true</property>
			<property name="widgetShowTextbox.5">true</property>
			<property name="widgetShowTextbox.6">true</property>
			<property name="widgetDouble">false</property>
			<property name="widgetDouble.2">false</property>
			<property name="widgetDouble.3">false</property>
			<property name="widgetDouble.4">false</property>
			<property name="widgetDouble.5">false</property>
			<property name="widgetDouble.6">false</property>
			<property name="widgetTriple">false</property>
			<property name="widgetTriple.2">false</property>
			<property name="widgetTriple.3">false</property>
			<property name="widgetTriple.4">false</property>
			<property name="widgetTriple.5">false</property>
			<property name="widgetTriple.6">false</property>
			<property name="widgetType.5">none</property>
			<property name="widgetType.6">none</property>
			<property name="widgetContent">default</property>
			<property name="widgetContent.2">default</property>
			<property name="widgetContent.3">default</property>
			<property name="widgetContent.4">default</property>
			<property name="widgetContent.5">default</property>
			<property name="widgetContent.6">default</property>
			<property name="doInfoPopup">false</property>
			<property name="doInfoPopup.2">false</property>
			<property name="doInfoPopup.3">false</property>
			<property name="doInfoPopup.4">false</property>
			<property name="doInfoPopup.5">false</property>
			<property name="doInfoPopup.6">false</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(videos,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(videos,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>$LOCALIZE[31500]</label>
			<label2 />
			<icon>icons/mainmenu/livetv.png</icon>
			<thumb />
			<property name="labelID">31500</property>
			<property name="defaultID">tv</property>
			<property name="background">$VAR[Pvr.Art]</property>
			<property name="widget">TVChannelGroups</property>
			<property name="widgetName">$LOCALIZE[19173]</property>
			<property name="widgetType">tv</property>
			<property name="widgetTarget">tvguide</property>
			<property name="widgetPath">pvr://channels/tv/</property>
			<property name="widgetArtwork">Square</property>
			<property name="widget.2">LastPlayedChannels</property>
			<property name="widgetName.2">$LOCALIZE[31454]</property>
			<property name="widgetType.2">tv</property>
			<property name="widgetTarget.2">pvr</property>
			<property name="widgetPath.2">pvr://channels/tv/*?view=lastplayed</property>
			<property name="widgetArtwork.2">Square</property>
			<property name="widget.3">ActiveRecordings</property>
			<property name="widgetName.3">$LOCALIZE[31455]</property>
			<property name="widgetType.3">tv</property>
			<property name="widgetTarget.3">pvr</property>
			<property name="widgetPath.3">pvr://recordings/tv/active?view=flat</property>
			<property name="widgetArtwork.3">Square</property>
			<property name="widgetTarget.4">false</property>
			<property name="widgetTarget.5">false</property>
			<property name="widgetTarget.6">false</property>
			<property name="horizontalWidgetPos">Standard</property>
			<property name="EHPlaylistFanart">false</property>
			<property name="UseBottomShortcuts">false</property>
			<property name="centerShelves">false</property>
			<property name="showShelvesInfo">false</property>
			<property name="widgetTwoShelves">false</property>
			<property name="widgetThreeShelves">false</property>
			<property name="widgetThreeShelvesLarge">false</property>
			<property name="widgetArtwork.4">Poster</property>
			<property name="widgetArtwork.5">Poster</property>
			<property name="widgetArtwork.6">Poster</property>
			<property name="widgetPosterLabel">false</property>
			<property name="widgetPosterLabel.2">false</property>
			<property name="widgetPosterLabel.3">false</property>
			<property name="widgetPosterLabel.4">false</property>
			<property name="widgetPosterLabel.5">false</property>
			<property name="widgetPosterLabel.6">false</property>
			<property name="widgetLabelScroll">false</property>
			<property name="widgetLabelScroll.2">false</property>
			<property name="widgetLabelScroll.3">false</property>
			<property name="widgetLabelScroll.4">false</property>
			<property name="widgetLabelScroll.5">false</property>
			<property name="widgetLabelScroll.6">false</property>
			<property name="widgetShowTextbox">true</property>
			<property name="widgetShowTextbox.2">true</property>
			<property name="widgetShowTextbox.3">true</property>
			<property name="widgetShowTextbox.4">true</property>
			<property name="widgetShowTextbox.5">true</property>
			<property name="widgetShowTextbox.6">true</property>
			<property name="widgetDouble">false</property>
			<property name="widgetDouble.2">false</property>
			<property name="widgetDouble.3">false</property>
			<property name="widgetDouble.4">false</property>
			<property name="widgetDouble.5">false</property>
			<property name="widgetDouble.6">false</property>
			<property name="widgetTriple">false</property>
			<property name="widgetTriple.2">false</property>
			<property name="widgetTriple.3">false</property>
			<property name="widgetTriple.4">false</property>
			<property name="widgetTriple.5">false</property>
			<property name="widgetTriple.6">false</property>
			<property name="widgetType.4">none</property>
			<property name="widgetType.5">none</property>
			<property name="widgetType.6">none</property>
			<property name="widgetContent">default</property>
			<property name="widgetContent.2">default</property>
			<property name="widgetContent.3">default</property>
			<property name="widgetContent.4">default</property>
			<property name="widgetContent.5">default</property>
			<property name="widgetContent.6">default</property>
			<property name="doInfoPopup">false</property>
			<property name="doInfoPopup.2">false</property>
			<property name="doInfoPopup.3">false</property>
			<property name="doInfoPopup.4">false</property>
			<property name="doInfoPopup.5">false</property>
			<property name="doInfoPopup.6">false</property>
			<visible>[System.HasPVRAddon] + [PVR.HasTVChannels]</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-31500</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>$LOCALIZE[31509]</label>
			<label2 />
			<icon>icons/mainmenu/radio.png</icon>
			<thumb />
			<property name="labelID">31509</property>
			<property name="defaultID">radio</property>
			<property name="background">$VAR[Radio.Art]</property>
			<property name="widget">RadioChannelGroups</property>
			<property name="widgetName">$LOCALIZE[19174]</property>
			<property name="widgetType">radio</property>
			<property name="widgetTarget">radioguide</property>
			<property name="widgetPath">pvr://channels/radio/</property>
			<property name="widgetArtwork">Square</property>
			<property name="widget.2">LastPlayedRadioChannels</property>
			<property name="widgetName.2">$LOCALIZE[31461]</property>
			<property name="widgetType.2">radio</property>
			<property name="widgetTarget.2">pvr</property>
			<property name="widgetPath.2">pvr://channels/radio/*?view=lastplayed</property>
			<property name="widgetArtwork.2">Square</property>
			<property name="widget.3">ActiveRadioRecordings</property>
			<property name="widgetName.3">$LOCALIZE[31462]</property>
			<property name="widgetType.3">radio</property>
			<property name="widgetTarget.3">pvr</property>
			<property name="widgetPath.3">pvr://recordings/radio/active?view=flat</property>
			<property name="widgetArtwork.3">Square</property>
			<property name="widgetTarget.4">false</property>
			<property name="widgetTarget.5">false</property>
			<property name="widgetTarget.6">false</property>
			<property name="horizontalWidgetPos">Standard</property>
			<property name="EHPlaylistFanart">false</property>
			<property name="UseBottomShortcuts">false</property>
			<property name="centerShelves">false</property>
			<property name="showShelvesInfo">false</property>
			<property name="widgetTwoShelves">false</property>
			<property name="widgetThreeShelves">false</property>
			<property name="widgetThreeShelvesLarge">false</property>
			<property name="widgetArtwork.4">Poster</property>
			<property name="widgetArtwork.5">Poster</property>
			<property name="widgetArtwork.6">Poster</property>
			<property name="widgetPosterLabel">false</property>
			<property name="widgetPosterLabel.2">false</property>
			<property name="widgetPosterLabel.3">false</property>
			<property name="widgetPosterLabel.4">false</property>
			<property name="widgetPosterLabel.5">false</property>
			<property name="widgetPosterLabel.6">false</property>
			<property name="widgetLabelScroll">false</property>
			<property name="widgetLabelScroll.2">false</property>
			<property name="widgetLabelScroll.3">false</property>
			<property name="widgetLabelScroll.4">false</property>
			<property name="widgetLabelScroll.5">false</property>
			<property name="widgetLabelScroll.6">false</property>
			<property name="widgetShowTextbox">true</property>
			<property name="widgetShowTextbox.2">true</property>
			<property name="widgetShowTextbox.3">true</property>
			<property name="widgetShowTextbox.4">true</property>
			<property name="widgetShowTextbox.5">true</property>
			<property name="widgetShowTextbox.6">true</property>
			<property name="widgetDouble">false</property>
			<property name="widgetDouble.2">false</property>
			<property name="widgetDouble.3">false</property>
			<property name="widgetDouble.4">false</property>
			<property name="widgetDouble.5">false</property>
			<property name="widgetDouble.6">false</property>
			<property name="widgetTriple">false</property>
			<property name="widgetTriple.2">false</property>
			<property name="widgetTriple.3">false</property>
			<property name="widgetTriple.4">false</property>
			<property name="widgetTriple.5">false</property>
			<property name="widgetTriple.6">false</property>
			<property name="widgetType.4">none</property>
			<property name="widgetType.5">none</property>
			<property name="widgetType.6">none</property>
			<property name="widgetContent">default</property>
			<property name="widgetContent.2">default</property>
			<property name="widgetContent.3">default</property>
			<property name="widgetContent.4">default</property>
			<property name="widgetContent.5">default</property>
			<property name="widgetContent.6">default</property>
			<property name="doInfoPopup">false</property>
			<property name="doInfoPopup.2">false</property>
			<property name="doInfoPopup.3">false</property>
			<property name="doInfoPopup.4">false</property>
			<property name="doInfoPopup.5">false</property>
			<property name="doInfoPopup.6">false</property>
			<visible>[System.HasPVRAddon] + [PVR.HasRadioChannels]</visible>
			<onclick>ActivateWindow(RadioChannels)</onclick>
			<property name="path">ActivateWindow(RadioChannels)</property>
			<property name="list">RadioChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-31509</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>icons/mainmenu/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">search</property>
			<property name="background">$VAR[Search.Art]</property>
			<property name="widgetTarget">false</property>
			<property name="widgetTarget.2">false</property>
			<property name="widgetTarget.3">false</property>
			<property name="widgetTarget.4">false</property>
			<property name="widgetTarget.5">false</property>
			<property name="widgetTarget.6">false</property>
			<property name="horizontalWidgetPos">Standard</property>
			<property name="EHPlaylistFanart">false</property>
			<property name="UseBottomShortcuts">false</property>
			<property name="centerShelves">false</property>
			<property name="showShelvesInfo">false</property>
			<property name="widgetTwoShelves">false</property>
			<property name="widgetThreeShelves">false</property>
			<property name="widgetThreeShelvesLarge">false</property>
			<property name="widgetArtwork">Poster</property>
			<property name="widgetArtwork.2">Poster</property>
			<property name="widgetArtwork.3">Poster</property>
			<property name="widgetArtwork.4">Poster</property>
			<property name="widgetArtwork.5">Poster</property>
			<property name="widgetArtwork.6">Poster</property>
			<property name="widgetPosterLabel">false</property>
			<property name="widgetPosterLabel.2">false</property>
			<property name="widgetPosterLabel.3">false</property>
			<property name="widgetPosterLabel.4">false</property>
			<property name="widgetPosterLabel.5">false</property>
			<property name="widgetPosterLabel.6">false</property>
			<property name="widgetLabelScroll">false</property>
			<property name="widgetLabelScroll.2">false</property>
			<property name="widgetLabelScroll.3">false</property>
			<property name="widgetLabelScroll.4">false</property>
			<property name="widgetLabelScroll.5">false</property>
			<property name="widgetLabelScroll.6">false</property>
			<property name="widgetShowTextbox">true</property>
			<property name="widgetShowTextbox.2">true</property>
			<property name="widgetShowTextbox.3">true</property>
			<property name="widgetShowTextbox.4">true</property>
			<property name="widgetShowTextbox.5">true</property>
			<property name="widgetShowTextbox.6">true</property>
			<property name="widgetDouble">false</property>
			<property name="widgetDouble.2">false</property>
			<property name="widgetDouble.3">false</property>
			<property name="widgetDouble.4">false</property>
			<property name="widgetDouble.5">false</property>
			<property name="widgetDouble.6">false</property>
			<property name="widgetTriple">false</property>
			<property name="widgetTriple.2">false</property>
			<property name="widgetTriple.3">false</property>
			<property name="widgetTriple.4">false</property>
			<property name="widgetTriple.5">false</property>
			<property name="widgetTriple.6">false</property>
			<property name="widgetType">none</property>
			<property name="widgetType.2">none</property>
			<property name="widgetType.3">none</property>
			<property name="widgetType.4">none</property>
			<property name="widgetType.5">none</property>
			<property name="widgetType.6">none</property>
			<property name="widgetContent">default</property>
			<property name="widgetContent.2">default</property>
			<property name="widgetContent.3">default</property>
			<property name="widgetContent.4">default</property>
			<property name="widgetContent.5">default</property>
			<property name="widgetContent.6">default</property>
			<property name="doInfoPopup">false</property>
			<property name="doInfoPopup.2">false</property>
			<property name="doInfoPopup.3">false</property>
			<property name="doInfoPopup.4">false</property>
			<property name="doInfoPopup.5">false</property>
			<property name="doInfoPopup.6">false</property>
			<onclick condition="!Skin.HasSetting(Enable.GlobalSearch) | !System.HasAddon(script.globalsearch)">SetProperty(CustomSearch,1,home)</onclick>
			<property name="path">SetProperty(CustomSearch,1,home)</property>
			<property name="list">SetProperty(CustomSearch,1,home)</property>
			<onclick condition="!Skin.HasSetting(Enable.GlobalSearch) | !System.HasAddon(script.globalsearch)">Skin.Reset(CustomSearchTerm)</onclick>
			<onclick condition="!Skin.HasSetting(Enable.GlobalSearch) | !System.HasAddon(script.globalsearch)">Skin.SetString(CustomSearchTerm)</onclick>
			<onclick condition="!Skin.HasSetting(Enable.GlobalSearch) | !System.HasAddon(script.globalsearch)">ActivateWindow(1122)</onclick>
			<onclick condition="Skin.HasSetting(Enable.GlobalSearch) + System.HasAddon(script.globalsearch)">RunScript(script.globalsearch)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-137</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19019]</label>
			<label2 />
			<icon>icons/mainmenu/tv.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[22020]</label>
			<label2 />
			<icon>icons/mainmenu/tvguide.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19163]</label>
			<label2 />
			<icon>icons/mainmenu/cd.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19138]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19138</property>
			<property name="defaultID">19138</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVTimerRules)</onclick>
			<property name="path">ActivateWindow(TVTimerRules)</property>
			<property name="list">TVTimerRules</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19040]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>icons/mainmenu/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">tvsearch</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19019]</label>
			<label2 />
			<icon>icons/mainmenu/radio.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">radiochannels</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioChannels)</onclick>
			<property name="path">ActivateWindow(RadioChannels)</property>
			<property name="list">RadioChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[22020]</label>
			<label2 />
			<icon>icons/mainmenu/tvguide.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">radioguide</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioGuide)</onclick>
			<property name="path">ActivateWindow(RadioGuide)</property>
			<property name="list">RadioGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19163]</label>
			<label2 />
			<icon>icons/mainmenu/cd.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">radiorecordings</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioRecordings)</onclick>
			<property name="path">ActivateWindow(RadioRecordings)</property>
			<property name="list">RadioRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19138]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19138</property>
			<property name="defaultID">radiotimerrules</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioTimerRules)</onclick>
			<property name="path">ActivateWindow(RadioTimerRules)</property>
			<property name="list">RadioTimerRules</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19040]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">radiotimers</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioTimers)</onclick>
			<property name="path">ActivateWindow(RadioTimers)</property>
			<property name="list">RadioTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>icons/mainmenu/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">radiosearch</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioSearch)</onclick>
			<property name="path">ActivateWindow(RadioSearch)</property>
			<property name="list">RadioSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20342]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20342</property>
			<property name="defaultID">searchmovies</property>
			<visible>[Library.HasContent(movies) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,movies=true)</onclick>
			<property name="path">RunScript(script.globalsearch,movies=true)</property>
			<property name="list">RunScript(script.globalsearch,movies=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20343]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">searchtvshows</property>
			<visible>[Library.HasContent(tvshows) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,tvshows=true)</onclick>
			<property name="path">RunScript(script.globalsearch,tvshows=true)</property>
			<property name="list">RunScript(script.globalsearch,tvshows=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20360]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20360</property>
			<property name="defaultID">searchepisodes</property>
			<visible>[Library.HasContent(tvshows) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,episodes=true)</onclick>
			<property name="path">RunScript(script.globalsearch,episodes=true)</property>
			<property name="list">RunScript(script.globalsearch,episodes=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20389]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">searchmusicvideos</property>
			<visible>[Library.HasContent(musicvideos) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,musicvideos=true)</onclick>
			<property name="path">RunScript(script.globalsearch,musicvideos=true)</property>
			<property name="list">RunScript(script.globalsearch,musicvideos=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[133]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">searchmovies</property>
			<visible>[Library.HasContent(music) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,artists=true)</onclick>
			<property name="path">RunScript(script.globalsearch,artists=true)</property>
			<property name="list">RunScript(script.globalsearch,artists=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[132]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">132</property>
			<property name="defaultID">searchalbums</property>
			<visible>[Library.HasContent(music) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,albums=true)</onclick>
			<property name="path">RunScript(script.globalsearch,albums=true)</property>
			<property name="list">RunScript(script.globalsearch,albums=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[134]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">134</property>
			<property name="defaultID">searchsongs</property>
			<visible>[Library.HasContent(music) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,songs=true)</onclick>
			<property name="path">RunScript(script.globalsearch,songs=true)</property>
			<property name="list">RunScript(script.globalsearch,songs=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">5</property>
			<label>Settings</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">5</property>
			<label>Reboot</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">reboot</property>
			<property name="defaultID" />
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">5</property>
			<label>Reload Skin</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">reloadskin</property>
			<property name="defaultID" />
			<visible>[False] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-137)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13012]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13012</property>
			<property name="defaultID">13012</property>
			<visible>[[System.ShowExitButton] + [System.ShowExitButton]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[5]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20183]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/update.png</icon>
			<thumb />
			<property name="labelID">20183</property>
			<property name="defaultID">20183</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ReloadSkin()</onclick>
			<property name="path">ReloadSkin()</property>
			<property name="list">ReloadSkin()</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>[[System.CanPowerDown] + [System.CanPowerDown]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Powerdown()</onclick>
			<property name="path">Powerdown()</property>
			<property name="list">Powerdown()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13011]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13011</property>
			<property name="defaultID">13011</property>
			<visible>[[System.CanSuspend] + [System.CanSuspend]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Suspend()</onclick>
			<property name="path">Suspend()</property>
			<property name="list">Suspend()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13010]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>[[System.CanHibernate] + [System.CanHibernate]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Hibernate()</onclick>
			<property name="path">Hibernate()</property>
			<property name="list">Hibernate()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/update.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>[[System.CanReboot] + [System.CanReboot]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reset()</onclick>
			<property name="path">Reset()</property>
			<property name="list">Reset()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[31527]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/android.png</icon>
			<thumb />
			<property name="labelID">31527</property>
			<property name="defaultID">31527</property>
			<visible>[System.CanReboot + [System.Platform.Linux | System.Platform.Linux.RaspberryPi | System.Platform.Android]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.ExecWait("/usr/sbin/rebootfromnand")</onclick>
			<property name="path">System.ExecWait("/usr/sbin/rebootfromnand")</property>
			<property name="list">System.ExecWait(/usr/sbin/rebootfromnand)</property>
			<onclick>Reset()</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/logout.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>dialog.close(all,true)</onclick>
			<property name="path">dialog.close(all,true)</property>
			<property name="list">dialog.close(all,true)</property>
			<onclick>System.LogOff</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20046]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>DefaultUser.png</icon>
			<thumb />
			<property name="labelID">20046</property>
			<property name="defaultID">20046</property>
			<visible>[[System.HasLocks] + [System.HasLocks]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>mastermode</onclick>
			<property name="path">mastermode</property>
			<property name="list">mastermode</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13017]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13017</property>
			<property name="defaultID">13017</property>
			<visible>[[System.HasShutdown +!System.IsInhibit] + [System.HasShutdown +!System.IsInhibit]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>InhibitIdleShutdown(true)</onclick>
			<property name="path">InhibitIdleShutdown(true)</property>
			<property name="list">InhibitIdleShutdown(true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13018]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13018</property>
			<property name="defaultID">13018</property>
			<visible>[[System.HasShutdown + System.IsInhibit] + [System.HasShutdown + System.IsInhibit]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>InhibitIdleShutdown(false)</onclick>
			<property name="path">InhibitIdleShutdown(false)</property>
			<property name="list">InhibitIdleShutdown(false)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20150]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/alarm.png</icon>
			<thumb />
			<property name="labelID">20150</property>
			<property name="defaultID">20150</property>
			<visible>[[!System.HasAlarm(shutdowntimer) + [System.CanPowerDown | System.CanSuspend | System.CanHibernate]] + [!System.HasAlarm(shutdowntimer)]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>AlarmClock(shutdowntimer,Shutdown())</onclick>
			<property name="path">AlarmClock(shutdowntimer,Shutdown())</property>
			<property name="list">AlarmClock(shutdowntimer,Shutdown())</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20151]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/alarm.png</icon>
			<thumb />
			<property name="labelID">20151</property>
			<property name="defaultID">20151</property>
			<visible>[[System.HasAlarm(shutdowntimer)] + [System.HasAlarm(shutdowntimer)]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>CancelAlarm(shutdowntimer)</onclick>
			<property name="path">CancelAlarm(shutdowntimer)</property>
			<property name="list">CancelAlarm(shutdowntimer)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include />
	<include name="skinshortcuts-submenu-1" />
	<include />
	<include name="skinshortcuts-submenu-2" />
	<include />
	<include name="skinshortcuts-submenu-3" />
	<include />
	<include name="skinshortcuts-submenu-4" />
	<include />
	<include name="skinshortcuts-submenu-5" />
	<include name="skinshortcuts-group-num-20342">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-20342">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-20342-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-20342-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-20342-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-20342-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-20342-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-20342-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-20342-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-20342-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-20342-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-20342-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-tvshows">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-tvshows">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-tvshows-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-tvshows-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-tvshows-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-tvshows-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-tvshows-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-tvshows-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-tvshows-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-tvshows-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-tvshows-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-tvshows-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31500">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19019]</label>
			<label2 />
			<icon>icons/mainmenu/tv.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[22020]</label>
			<label2 />
			<icon>icons/mainmenu/tvguide.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19163]</label>
			<label2 />
			<icon>icons/mainmenu/cd.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19138]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19138</property>
			<property name="defaultID">19138</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVTimerRules)</onclick>
			<property name="path">ActivateWindow(TVTimerRules)</property>
			<property name="list">TVTimerRules</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19040]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>icons/mainmenu/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">tvsearch</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-num-31500">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19019]</label>
			<label2 />
			<icon>icons/mainmenu/tv.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[22020]</label>
			<label2 />
			<icon>icons/mainmenu/tvguide.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19163]</label>
			<label2 />
			<icon>icons/mainmenu/cd.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19138]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19138</property>
			<property name="defaultID">19138</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVTimerRules)</onclick>
			<property name="path">ActivateWindow(TVTimerRules)</property>
			<property name="list">TVTimerRules</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[19040]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>icons/mainmenu/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">tvsearch</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31500)</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31500</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-num-31500-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31500-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31500-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31500-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31500-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31500-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31500-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31500-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31500-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31500-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31509">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19019]</label>
			<label2 />
			<icon>icons/mainmenu/radio.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">radiochannels</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(RadioChannels)</onclick>
			<property name="path">ActivateWindow(RadioChannels)</property>
			<property name="list">RadioChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[22020]</label>
			<label2 />
			<icon>icons/mainmenu/tvguide.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">radioguide</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(RadioGuide)</onclick>
			<property name="path">ActivateWindow(RadioGuide)</property>
			<property name="list">RadioGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19163]</label>
			<label2 />
			<icon>icons/mainmenu/cd.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">radiorecordings</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(RadioRecordings)</onclick>
			<property name="path">ActivateWindow(RadioRecordings)</property>
			<property name="list">RadioRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19138]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19138</property>
			<property name="defaultID">radiotimerrules</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(RadioTimerRules)</onclick>
			<property name="path">ActivateWindow(RadioTimerRules)</property>
			<property name="list">RadioTimerRules</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19040]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">radiotimers</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(RadioTimers)</onclick>
			<property name="path">ActivateWindow(RadioTimers)</property>
			<property name="list">RadioTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>icons/mainmenu/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">radiosearch</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(RadioSearch)</onclick>
			<property name="path">ActivateWindow(RadioSearch)</property>
			<property name="list">RadioSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-num-31509">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19019]</label>
			<label2 />
			<icon>icons/mainmenu/radio.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">radiochannels</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioChannels)</onclick>
			<property name="path">ActivateWindow(RadioChannels)</property>
			<property name="list">RadioChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[22020]</label>
			<label2 />
			<icon>icons/mainmenu/tvguide.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">radioguide</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioGuide)</onclick>
			<property name="path">ActivateWindow(RadioGuide)</property>
			<property name="list">RadioGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19163]</label>
			<label2 />
			<icon>icons/mainmenu/cd.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">radiorecordings</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioRecordings)</onclick>
			<property name="path">ActivateWindow(RadioRecordings)</property>
			<property name="list">RadioRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19138]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19138</property>
			<property name="defaultID">radiotimerrules</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioTimerRules)</onclick>
			<property name="path">ActivateWindow(RadioTimerRules)</property>
			<property name="list">RadioTimerRules</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[19040]</label>
			<label2 />
			<icon>icons/mainmenu/timer.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">radiotimers</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioTimers)</onclick>
			<property name="path">ActivateWindow(RadioTimers)</property>
			<property name="list">RadioTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[137]</label>
			<label2 />
			<icon>icons/mainmenu/search.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">radiosearch</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Window(10000).Property(submenuVisibility),num-31509)</visible>
			<onclick>ActivateWindow(RadioSearch)</onclick>
			<property name="path">ActivateWindow(RadioSearch)</property>
			<property name="list">RadioSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">31509</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-num-31509-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31509-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31509-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31509-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31509-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31509-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31509-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31509-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-31509-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-31509-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-137">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20342]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20342</property>
			<property name="defaultID">searchmovies</property>
			<visible>Library.HasContent(movies) + Skin.HasSetting(Enable.GlobalSearch)</visible>
			<onclick>RunScript(script.globalsearch,movies=true)</onclick>
			<property name="path">RunScript(script.globalsearch,movies=true)</property>
			<property name="list">RunScript(script.globalsearch,movies=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20343]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">searchtvshows</property>
			<visible>Library.HasContent(tvshows) + Skin.HasSetting(Enable.GlobalSearch)</visible>
			<onclick>RunScript(script.globalsearch,tvshows=true)</onclick>
			<property name="path">RunScript(script.globalsearch,tvshows=true)</property>
			<property name="list">RunScript(script.globalsearch,tvshows=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20360]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20360</property>
			<property name="defaultID">searchepisodes</property>
			<visible>Library.HasContent(tvshows) + Skin.HasSetting(Enable.GlobalSearch)</visible>
			<onclick>RunScript(script.globalsearch,episodes=true)</onclick>
			<property name="path">RunScript(script.globalsearch,episodes=true)</property>
			<property name="list">RunScript(script.globalsearch,episodes=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20389]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">searchmusicvideos</property>
			<visible>Library.HasContent(musicvideos) + Skin.HasSetting(Enable.GlobalSearch)</visible>
			<onclick>RunScript(script.globalsearch,musicvideos=true)</onclick>
			<property name="path">RunScript(script.globalsearch,musicvideos=true)</property>
			<property name="list">RunScript(script.globalsearch,musicvideos=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[133]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">searchmovies</property>
			<visible>Library.HasContent(music) + Skin.HasSetting(Enable.GlobalSearch)</visible>
			<onclick>RunScript(script.globalsearch,artists=true)</onclick>
			<property name="path">RunScript(script.globalsearch,artists=true)</property>
			<property name="list">RunScript(script.globalsearch,artists=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[132]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">132</property>
			<property name="defaultID">searchalbums</property>
			<visible>Library.HasContent(music) + Skin.HasSetting(Enable.GlobalSearch)</visible>
			<onclick>RunScript(script.globalsearch,albums=true)</onclick>
			<property name="path">RunScript(script.globalsearch,albums=true)</property>
			<property name="list">RunScript(script.globalsearch,albums=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[134]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">134</property>
			<property name="defaultID">searchsongs</property>
			<visible>Library.HasContent(music) + Skin.HasSetting(Enable.GlobalSearch)</visible>
			<onclick>RunScript(script.globalsearch,songs=true)</onclick>
			<property name="path">RunScript(script.globalsearch,songs=true)</property>
			<property name="list">RunScript(script.globalsearch,songs=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">5</property>
			<label>Settings</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">5</property>
			<label>Reboot</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">reboot</property>
			<property name="defaultID" />
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">5</property>
			<label>Reload Skin</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">reloadskin</property>
			<property name="defaultID" />
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-num-137">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20342]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20342</property>
			<property name="defaultID">searchmovies</property>
			<visible>[Library.HasContent(movies) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,movies=true)</onclick>
			<property name="path">RunScript(script.globalsearch,movies=true)</property>
			<property name="list">RunScript(script.globalsearch,movies=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20343]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">searchtvshows</property>
			<visible>[Library.HasContent(tvshows) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,tvshows=true)</onclick>
			<property name="path">RunScript(script.globalsearch,tvshows=true)</property>
			<property name="list">RunScript(script.globalsearch,tvshows=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20360]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20360</property>
			<property name="defaultID">searchepisodes</property>
			<visible>[Library.HasContent(tvshows) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,episodes=true)</onclick>
			<property name="path">RunScript(script.globalsearch,episodes=true)</property>
			<property name="list">RunScript(script.globalsearch,episodes=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20389]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">searchmusicvideos</property>
			<visible>[Library.HasContent(musicvideos) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,musicvideos=true)</onclick>
			<property name="path">RunScript(script.globalsearch,musicvideos=true)</property>
			<property name="list">RunScript(script.globalsearch,musicvideos=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[133]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">searchmovies</property>
			<visible>[Library.HasContent(music) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,artists=true)</onclick>
			<property name="path">RunScript(script.globalsearch,artists=true)</property>
			<property name="list">RunScript(script.globalsearch,artists=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[132]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">132</property>
			<property name="defaultID">searchalbums</property>
			<visible>[Library.HasContent(music) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,albums=true)</onclick>
			<property name="path">RunScript(script.globalsearch,albums=true)</property>
			<property name="list">RunScript(script.globalsearch,albums=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[134]</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">134</property>
			<property name="defaultID">searchsongs</property>
			<visible>[Library.HasContent(music) + Skin.HasSetting(Enable.GlobalSearch)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<onclick>RunScript(script.globalsearch,songs=true)</onclick>
			<property name="path">RunScript(script.globalsearch,songs=true)</property>
			<property name="list">RunScript(script.globalsearch,songs=true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">5</property>
			<label>Settings</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID" />
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">5</property>
			<label>Reboot</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">reboot</property>
			<property name="defaultID" />
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<property name="group">137</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">5</property>
			<label>Reload Skin</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">reloadskin</property>
			<property name="defaultID" />
			<visible>[False] + String.IsEqual(Window(10000).Property(submenuVisibility),num-137)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-num-137-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-137-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-137-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-137-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-137-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-137-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-137-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-137-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-num-137-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-137-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13012]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13012</property>
			<property name="defaultID">13012</property>
			<visible>[System.ShowExitButton] + [System.ShowExitButton]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[5]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20183]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/update.png</icon>
			<thumb />
			<property name="labelID">20183</property>
			<property name="defaultID">20183</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ReloadSkin()</onclick>
			<property name="path">ReloadSkin()</property>
			<property name="list">ReloadSkin()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>[System.CanPowerDown] + [System.CanPowerDown]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Powerdown()</onclick>
			<property name="path">Powerdown()</property>
			<property name="list">Powerdown()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13011]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13011</property>
			<property name="defaultID">13011</property>
			<visible>[System.CanSuspend] + [System.CanSuspend]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Suspend()</onclick>
			<property name="path">Suspend()</property>
			<property name="list">Suspend()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13010]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>[System.CanHibernate] + [System.CanHibernate]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Hibernate()</onclick>
			<property name="path">Hibernate()</property>
			<property name="list">Hibernate()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/update.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>[System.CanReboot] + [System.CanReboot]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reset()</onclick>
			<property name="path">Reset()</property>
			<property name="list">Reset()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[31527]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/android.png</icon>
			<thumb />
			<property name="labelID">31527</property>
			<property name="defaultID">31527</property>
			<visible>System.CanReboot + [System.Platform.Linux | System.Platform.Linux.RaspberryPi | System.Platform.Android]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.ExecWait("/usr/sbin/rebootfromnand")</onclick>
			<property name="path">System.ExecWait("/usr/sbin/rebootfromnand")</property>
			<property name="list">System.ExecWait(/usr/sbin/rebootfromnand)</property>
			<onclick>Reset()</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/logout.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>dialog.close(all,true)</onclick>
			<property name="path">dialog.close(all,true)</property>
			<property name="list">dialog.close(all,true)</property>
			<onclick>System.LogOff</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20046]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>DefaultUser.png</icon>
			<thumb />
			<property name="labelID">20046</property>
			<property name="defaultID">20046</property>
			<visible>[System.HasLocks] + [System.HasLocks]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>mastermode</onclick>
			<property name="path">mastermode</property>
			<property name="list">mastermode</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13017]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13017</property>
			<property name="defaultID">13017</property>
			<visible>[System.HasShutdown +!System.IsInhibit] + [System.HasShutdown +!System.IsInhibit]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>InhibitIdleShutdown(true)</onclick>
			<property name="path">InhibitIdleShutdown(true)</property>
			<property name="list">InhibitIdleShutdown(true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13018]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13018</property>
			<property name="defaultID">13018</property>
			<visible>[System.HasShutdown + System.IsInhibit] + [System.HasShutdown + System.IsInhibit]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>InhibitIdleShutdown(false)</onclick>
			<property name="path">InhibitIdleShutdown(false)</property>
			<property name="list">InhibitIdleShutdown(false)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20150]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/alarm.png</icon>
			<thumb />
			<property name="labelID">20150</property>
			<property name="defaultID">20150</property>
			<visible>[!System.HasAlarm(shutdowntimer) + [System.CanPowerDown | System.CanSuspend | System.CanHibernate]] + [!System.HasAlarm(shutdowntimer)]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>AlarmClock(shutdowntimer,Shutdown())</onclick>
			<property name="path">AlarmClock(shutdowntimer,Shutdown())</property>
			<property name="list">AlarmClock(shutdowntimer,Shutdown())</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20151]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/alarm.png</icon>
			<thumb />
			<property name="labelID">20151</property>
			<property name="defaultID">20151</property>
			<visible>[System.HasAlarm(shutdowntimer)] + [System.HasAlarm(shutdowntimer)]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>CancelAlarm(shutdowntimer)</onclick>
			<property name="path">CancelAlarm(shutdowntimer)</property>
			<property name="list">CancelAlarm(shutdowntimer)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13012]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13012</property>
			<property name="defaultID">13012</property>
			<visible>[[System.ShowExitButton] + [System.ShowExitButton]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[5]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20183]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/update.png</icon>
			<thumb />
			<property name="labelID">20183</property>
			<property name="defaultID">20183</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ReloadSkin()</onclick>
			<property name="path">ReloadSkin()</property>
			<property name="list">ReloadSkin()</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<visible>[[System.CanPowerDown] + [System.CanPowerDown]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Powerdown()</onclick>
			<property name="path">Powerdown()</property>
			<property name="list">Powerdown()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13011]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13011</property>
			<property name="defaultID">13011</property>
			<visible>[[System.CanSuspend] + [System.CanSuspend]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Suspend()</onclick>
			<property name="path">Suspend()</property>
			<property name="list">Suspend()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13010]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13010</property>
			<property name="defaultID">13010</property>
			<visible>[[System.CanHibernate] + [System.CanHibernate]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Hibernate()</onclick>
			<property name="path">Hibernate()</property>
			<property name="list">Hibernate()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/update.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<visible>[[System.CanReboot] + [System.CanReboot]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reset()</onclick>
			<property name="path">Reset()</property>
			<property name="list">Reset()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[31527]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/android.png</icon>
			<thumb />
			<property name="labelID">31527</property>
			<property name="defaultID">31527</property>
			<visible>[System.CanReboot + [System.Platform.Linux | System.Platform.Linux.RaspberryPi | System.Platform.Android]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.ExecWait("/usr/sbin/rebootfromnand")</onclick>
			<property name="path">System.ExecWait("/usr/sbin/rebootfromnand")</property>
			<property name="list">System.ExecWait(/usr/sbin/rebootfromnand)</property>
			<onclick>Reset()</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/logout.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>dialog.close(all,true)</onclick>
			<property name="path">dialog.close(all,true)</property>
			<property name="list">dialog.close(all,true)</property>
			<onclick>System.LogOff</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20046]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>DefaultUser.png</icon>
			<thumb />
			<property name="labelID">20046</property>
			<property name="defaultID">20046</property>
			<visible>[[System.HasLocks] + [System.HasLocks]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>mastermode</onclick>
			<property name="path">mastermode</property>
			<property name="list">mastermode</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13017]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13017</property>
			<property name="defaultID">13017</property>
			<visible>[[System.HasShutdown +!System.IsInhibit] + [System.HasShutdown +!System.IsInhibit]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>InhibitIdleShutdown(true)</onclick>
			<property name="path">InhibitIdleShutdown(true)</property>
			<property name="list">InhibitIdleShutdown(true)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[13018]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/power.png</icon>
			<thumb />
			<property name="labelID">13018</property>
			<property name="defaultID">13018</property>
			<visible>[[System.HasShutdown + System.IsInhibit] + [System.HasShutdown + System.IsInhibit]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>InhibitIdleShutdown(false)</onclick>
			<property name="path">InhibitIdleShutdown(false)</property>
			<property name="list">InhibitIdleShutdown(false)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20150]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/alarm.png</icon>
			<thumb />
			<property name="labelID">20150</property>
			<property name="defaultID">20150</property>
			<visible>[[!System.HasAlarm(shutdowntimer) + [System.CanPowerDown | System.CanSuspend | System.CanHibernate]] + [!System.HasAlarm(shutdowntimer)]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>AlarmClock(shutdowntimer,Shutdown())</onclick>
			<property name="path">AlarmClock(shutdowntimer,Shutdown())</property>
			<property name="list">AlarmClock(shutdowntimer,Shutdown())</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20151]</label>
			<label2>Power Menu Shortcut</label2>
			<icon>icons/mainmenu/alarm.png</icon>
			<thumb />
			<property name="labelID">20151</property>
			<property name="defaultID">20151</property>
			<visible>[[System.HasAlarm(shutdowntimer)] + [System.HasAlarm(shutdowntimer)]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>CancelAlarm(shutdowntimer)</onclick>
			<property name="path">CancelAlarm(shutdowntimer)</property>
			<property name="list">CancelAlarm(shutdowntimer)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-powermenu-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-powermenu-1">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-powermenu-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-powermenu-2">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-powermenu-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-powermenu-3">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-powermenu-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-powermenu-4">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-powermenu-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-powermenu-5">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-template-ShelfOnUpMainMenu">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-ShelfOnUpMainMenu-Master user</include>
		</include>
	<include name="skinshortcuts-template-ShelfOnUpMainMenu-Master user">
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),1) + String.IsEmpty(Window(home).Property(WidgetFocus1))">SetFocus(160011)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),1) + String.IsEqual(Window(home).Property(WidgetFocus1),2)">SetFocus(160012)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),1) + String.IsEqual(Window(home).Property(WidgetFocus1),3)">SetFocus(160013)</onup>
		<onup condition="false">SetFocus(160014)</onup>
		<onup condition="false">SetFocus(160015)</onup>
		<onup condition="false">SetFocus(160016)</onup>
		<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),2) + String.IsEmpty(Window(home).Property(WidgetFocus2))">SetFocus(160021)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),2) + String.IsEqual(Window(home).Property(WidgetFocus2),2)">SetFocus(160022)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),2) + String.IsEqual(Window(home).Property(WidgetFocus2),3)">SetFocus(160023)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),2) + String.IsEqual(Window(home).Property(WidgetFocus2),4)">SetFocus(160024)</onup>
		<onup condition="false">SetFocus(160025)</onup>
		<onup condition="false">SetFocus(160026)</onup>
		<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),3) + String.IsEmpty(Window(home).Property(WidgetFocus3))">SetFocus(160031)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),3) + String.IsEqual(Window(home).Property(WidgetFocus3),2)">SetFocus(160032)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),3) + String.IsEqual(Window(home).Property(WidgetFocus3),3)">SetFocus(160033)</onup>
		<onup condition="false">SetFocus(160034)</onup>
		<onup condition="false">SetFocus(160035)</onup>
		<onup condition="false">SetFocus(160036)</onup>
		<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),4) + String.IsEmpty(Window(home).Property(WidgetFocus4))">SetFocus(160041)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),4) + String.IsEqual(Window(home).Property(WidgetFocus4),2)">SetFocus(160042)</onup>
		<onup condition="String.IsEqual(Container(300).ListItem.Property(id),4) + String.IsEqual(Window(home).Property(WidgetFocus4),3)">SetFocus(160043)</onup>
		<onup condition="false">SetFocus(160044)</onup>
		<onup condition="false">SetFocus(160045)</onup>
		<onup condition="false">SetFocus(160046)</onup>
		<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
		</include>
	<include name="skinshortcuts-template-ShelfOnRightMainMenu">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-ShelfOnRightMainMenu-Master user</include>
		</include>
	<include name="skinshortcuts-template-ShelfOnRightMainMenu-Master user">
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),1) + String.IsEmpty(Window(home).Property(WidgetFocus1))">SetFocus(160011)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),1) + String.IsEqual(Window(home).Property(WidgetFocus1),2)">SetFocus(160012)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),1) + String.IsEqual(Window(home).Property(WidgetFocus1),3)">SetFocus(160013)</onright>
		<onright condition="false">SetFocus(160014)</onright>
		<onright condition="false">SetFocus(160015)</onright>
		<onright condition="false">SetFocus(160016)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),2) + String.IsEmpty(Window(home).Property(WidgetFocus2))">SetFocus(160021)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),2) + String.IsEqual(Window(home).Property(WidgetFocus2),2)">SetFocus(160022)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),2) + String.IsEqual(Window(home).Property(WidgetFocus2),3)">SetFocus(160023)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),2) + String.IsEqual(Window(home).Property(WidgetFocus2),4)">SetFocus(160024)</onright>
		<onright condition="false">SetFocus(160025)</onright>
		<onright condition="false">SetFocus(160026)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),3) + String.IsEmpty(Window(home).Property(WidgetFocus3))">SetFocus(160031)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),3) + String.IsEqual(Window(home).Property(WidgetFocus3),2)">SetFocus(160032)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),3) + String.IsEqual(Window(home).Property(WidgetFocus3),3)">SetFocus(160033)</onright>
		<onright condition="false">SetFocus(160034)</onright>
		<onright condition="false">SetFocus(160035)</onright>
		<onright condition="false">SetFocus(160036)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),4) + String.IsEmpty(Window(home).Property(WidgetFocus4))">SetFocus(160041)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),4) + String.IsEqual(Window(home).Property(WidgetFocus4),2)">SetFocus(160042)</onright>
		<onright condition="String.IsEqual(Container(300).ListItem.Property(id),4) + String.IsEqual(Window(home).Property(WidgetFocus4),3)">SetFocus(160043)</onright>
		<onright condition="false">SetFocus(160044)</onright>
		<onright condition="false">SetFocus(160045)</onright>
		<onright condition="false">SetFocus(160046)</onright>
		</include>
	<include name="skinshortcuts-template-ShelfIndicator">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-ShelfIndicator-Master user</include>
		</include>
	<include name="skinshortcuts-template-ShelfIndicator-Master user">
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-20342)</visible>
			<animation effect="fade" time="200">VisibleChange</animation>
			<animation effect="slide" start="0,0" end="0,375" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
			<include content="widgetsIndicator" condition="!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)">
				<param name="top">235</param>
				<param name="id">1</param>
				<param name="target1">true</param>
				<param name="target2">true</param>
				<param name="target3">true</param>
				<param name="target4">false</param>
				<param name="target5">false</param>
				<param name="target6">false</param>
				</include>
			<include content="widgetsIndicator" condition="Skin.HasSetting(Enable.BottomShortcuts) + !Skin.HasSetting(VerticalHome)">
				<param name="top">140</param>
				<param name="id">1</param>
				<param name="target1">true</param>
				<param name="target2">true</param>
				<param name="target3">true</param>
				<param name="target4">false</param>
				<param name="target5">false</param>
				<param name="target6">false</param>
				</include>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<animation effect="fade" time="200">VisibleChange</animation>
			<animation effect="slide" start="0,0" end="0,375" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
			<include content="widgetsIndicator" condition="!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)">
				<param name="top">235</param>
				<param name="id">2</param>
				<param name="target1">true</param>
				<param name="target2">true</param>
				<param name="target3">true</param>
				<param name="target4">true</param>
				<param name="target5">false</param>
				<param name="target6">false</param>
				</include>
			<include content="widgetsIndicator" condition="Skin.HasSetting(Enable.BottomShortcuts) + !Skin.HasSetting(VerticalHome)">
				<param name="top">140</param>
				<param name="id">2</param>
				<param name="target1">true</param>
				<param name="target2">true</param>
				<param name="target3">true</param>
				<param name="target4">true</param>
				<param name="target5">false</param>
				<param name="target6">false</param>
				</include>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<animation effect="fade" time="200">VisibleChange</animation>
			<animation effect="slide" start="0,0" end="0,375" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
			<include content="widgetsIndicator" condition="!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)">
				<param name="top">235</param>
				<param name="id">3</param>
				<param name="target1">true</param>
				<param name="target2">true</param>
				<param name="target3">true</param>
				<param name="target4">false</param>
				<param name="target5">false</param>
				<param name="target6">false</param>
				</include>
			<include content="widgetsIndicator" condition="Skin.HasSetting(Enable.BottomShortcuts) + !Skin.HasSetting(VerticalHome)">
				<param name="top">140</param>
				<param name="id">3</param>
				<param name="target1">true</param>
				<param name="target2">true</param>
				<param name="target3">true</param>
				<param name="target4">false</param>
				<param name="target5">false</param>
				<param name="target6">false</param>
				</include>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<animation effect="fade" time="200">VisibleChange</animation>
			<animation effect="slide" start="0,0" end="0,375" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
			<include content="widgetsIndicator" condition="!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)">
				<param name="top">235</param>
				<param name="id">4</param>
				<param name="target1">true</param>
				<param name="target2">true</param>
				<param name="target3">true</param>
				<param name="target4">false</param>
				<param name="target5">false</param>
				<param name="target6">false</param>
				</include>
			<include content="widgetsIndicator" condition="Skin.HasSetting(Enable.BottomShortcuts) + !Skin.HasSetting(VerticalHome)">
				<param name="top">140</param>
				<param name="id">4</param>
				<param name="target1">true</param>
				<param name="target2">true</param>
				<param name="target3">true</param>
				<param name="target4">false</param>
				<param name="target5">false</param>
				<param name="target6">false</param>
				</include>
			</control>
		</include>
	<include name="skinshortcuts-template-shelfgroup1">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-shelfgroup1-Master user</include>
		</include>
	<include name="skinshortcuts-template-shelfgroup1-Master user">
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-20342)</visible>
			<control type="group">
				<visible>Control.HasFocus(160011) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160011</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160011</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160011</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160011</param>
					<param name="label">$LOCALIZE[31422]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus1))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160011</param>
					<param name="nextid">160012</param>
					<param name="label">$LOCALIZE[31422]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus1))</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160011</param>
					<param name="label">$LOCALIZE[31422]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus1))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160011</param>
					<param name="label">$LOCALIZE[31422]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus1))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160011">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160011)] | [!ControlGroup(700).HasFocus + !String.IsEmpty(Window(home).Property(WidgetFocus1))]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="String.IsEmpty(Window(home).Property(WidgetFocus1)) + !Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160011</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160011</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160011</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160011</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160011</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<height>315</height>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<scrolltime>200</scrolltime>
				<autoscroll time="200000">!Control.HasFocus(160011) | [Control.HasFocus(160011) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160011,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="true">SetProperty(WidgetFocus1,2,home)</onup>
				<onup condition="true">SetFocus(160012)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160011</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id1">160011</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160011).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="videos">$VAR[RecentlyAddedMoviesVar]</content>
				</control>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<control type="group">
				<visible>Control.HasFocus(160021) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160021</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160021</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160021</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160021</param>
					<param name="label">$LOCALIZE[31441]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus2))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160021</param>
					<param name="nextid">160022</param>
					<param name="label">$LOCALIZE[31441]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus2))</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160021</param>
					<param name="label">$LOCALIZE[31441]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus2))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160021</param>
					<param name="label">$LOCALIZE[31441]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus2))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160021">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160021)] | [!ControlGroup(700).HasFocus + !String.IsEmpty(Window(home).Property(WidgetFocus2))]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="String.IsEmpty(Window(home).Property(WidgetFocus2)) + !Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160021</param>
					<param name="center228">false</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">true</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160021</param>
					<param name="center228">false</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">true</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160021</param>
					<param name="center228">false</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">true</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160021</param>
					<param name="center228">false</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">true</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160021</param>
					<param name="center228">false</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">true</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<height>315</height>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<scrolltime>200</scrolltime>
				<autoscroll time="200000">!Control.HasFocus(160021) | [Control.HasFocus(160021) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160021,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="true">SetProperty(WidgetFocus2,2,home)</onup>
				<onup condition="true">SetFocus(160022)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160021</param>
					<param name="iconimage">$VAR[Thumb]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">true</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">scale</param>
					<param name="labelfont">ListDetailsSmall</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">472</param>
					<param name="artworkwidthmed">358</param>
					<param name="artworkwidthsmall">331</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">right</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">true</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id1">160021</param>
					<param name="iconimage">$VAR[Thumb]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">true</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">scale</param>
					<param name="labelfont">ListDetailsSmall</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">472</param>
					<param name="artworkwidthmed">358</param>
					<param name="artworkwidthsmall">331</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">right</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">true</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160021).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="videos">$VAR[RecentlyAddedEpisodesVar]</content>
				</control>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<control type="group">
				<visible>Control.HasFocus(160031) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160031</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160031</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160031</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160031</param>
					<param name="label">$LOCALIZE[19173]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus3))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160031</param>
					<param name="nextid">160032</param>
					<param name="label">$LOCALIZE[19173]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus3))</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160031</param>
					<param name="label">$LOCALIZE[19173]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus3))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160031</param>
					<param name="label">$LOCALIZE[19173]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus3))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160031">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160031)] | [!ControlGroup(700).HasFocus + !String.IsEmpty(Window(home).Property(WidgetFocus3))]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="String.IsEmpty(Window(home).Property(WidgetFocus3)) + !Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160031</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160031</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160031</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160031</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160031</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<height>315</height>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<scrolltime>200</scrolltime>
				<autoscroll time="200000">!Control.HasFocus(160031) | [Control.HasFocus(160031) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160031,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="true">SetProperty(WidgetFocus3,2,home)</onup>
				<onup condition="true">SetFocus(160032)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160031</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">ListDetailsSmall</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">47</param>
					<param name="textbackheight">56</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id1">160031</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160031).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="" target="tvguide">pvr://channels/tv/</content>
				</control>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<control type="group">
				<visible>Control.HasFocus(160041) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160041</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160041</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160041</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160041</param>
					<param name="label">$LOCALIZE[19174]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus4))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160041</param>
					<param name="nextid">160042</param>
					<param name="label">$LOCALIZE[19174]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus4))</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160041</param>
					<param name="label">$LOCALIZE[19174]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus4))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160041</param>
					<param name="label">$LOCALIZE[19174]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEmpty(Window(home).Property(WidgetFocus4))</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160041">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160041)] | [!ControlGroup(700).HasFocus + !String.IsEmpty(Window(home).Property(WidgetFocus4))]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="String.IsEmpty(Window(home).Property(WidgetFocus4)) + !Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160041</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160041</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160041</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160041</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160041</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<height>315</height>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<scrolltime>200</scrolltime>
				<autoscroll time="200000">!Control.HasFocus(160041) | [Control.HasFocus(160041) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160041,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="true">SetProperty(WidgetFocus4,2,home)</onup>
				<onup condition="true">SetFocus(160042)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160041</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id1">160041</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160041).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="" target="radioguide">pvr://channels/radio/</content>
				</control>
			</control>
		</include>
	<include name="skinshortcuts-template-shelfgroup2">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-shelfgroup2-Master user</include>
		</include>
	<include name="skinshortcuts-template-shelfgroup2-Master user">
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-20342)</visible>
			<control type="group">
				<visible>Control.HasFocus(160012) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160012</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160012</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160012</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160012</param>
					<param name="label">$LOCALIZE[31425]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus1),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160012</param>
					<param name="label">$LOCALIZE[31425]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus1),2)</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160012</param>
					<param name="label">$LOCALIZE[31425]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus1),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160012</param>
					<param name="label">$LOCALIZE[31425]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus1),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160012">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160012)] | [!ControlGroup(700).HasFocus + !String.IsEqual(Window(home).Property(WidgetFocus1),2)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="String.IsEqual(Window(home).Property(WidgetFocus1),2) + !Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160012</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160012</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160012</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160012</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160012</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<height>315</height>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<autoscroll time="200000">!Control.HasFocus(160012) | [Control.HasFocus(160012) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160012,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="true">SetProperty(WidgetFocus1,3,home)</onup>
				<onup condition="true">SetFocus(160013)</onup>
				<onup condition="!true">ClearProperty(WidgetFocus1,home)</onup>
				<onup condition="!true">SetFocus(160011)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160012</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id1">160012</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160012).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="videos">special://skin/extras/playlists/movies_inprogress.xsp</content>
				</control>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<control type="group">
				<visible>Control.HasFocus(160022) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160022</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160022</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160022</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160022</param>
					<param name="label">$LOCALIZE[31444]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160022</param>
					<param name="label">$LOCALIZE[31444]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),2)</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160022</param>
					<param name="label">$LOCALIZE[31444]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160022</param>
					<param name="label">$LOCALIZE[31444]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160022">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160022)] | [!ControlGroup(700).HasFocus + !String.IsEqual(Window(home).Property(WidgetFocus2),2)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="String.IsEqual(Window(home).Property(WidgetFocus2),2) + !Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160022</param>
					<param name="center228">false</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">true</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160022</param>
					<param name="center228">false</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">true</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160022</param>
					<param name="center228">false</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">true</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160022</param>
					<param name="center228">false</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">true</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160022</param>
					<param name="center228">false</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">true</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<height>315</height>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<autoscroll time="200000">!Control.HasFocus(160022) | [Control.HasFocus(160022) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160022,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="true">SetProperty(WidgetFocus2,3,home)</onup>
				<onup condition="true">SetFocus(160023)</onup>
				<onup condition="!true">ClearProperty(WidgetFocus2,home)</onup>
				<onup condition="!true">SetFocus(160021)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160022</param>
					<param name="iconimage">$VAR[Thumb]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">true</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">scale</param>
					<param name="labelfont">ListDetailsSmall</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">472</param>
					<param name="artworkwidthmed">358</param>
					<param name="artworkwidthsmall">331</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">right</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">true</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id1">160022</param>
					<param name="iconimage">$VAR[Thumb]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">true</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">scale</param>
					<param name="labelfont">ListDetailsSmall</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">472</param>
					<param name="artworkwidthmed">358</param>
					<param name="artworkwidthsmall">331</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">right</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">true</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160022).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="videos">special://skin/extras/playlists/episodes_inprogress.xsp</content>
				</control>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<control type="group">
				<visible>Control.HasFocus(160032) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160032</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160032</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160032</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160032</param>
					<param name="label">$LOCALIZE[31454]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus3),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160032</param>
					<param name="label">$LOCALIZE[31454]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus3),2)</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160032</param>
					<param name="label">$LOCALIZE[31454]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus3),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160032</param>
					<param name="label">$LOCALIZE[31454]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus3),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160032">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160032)] | [!ControlGroup(700).HasFocus + !String.IsEqual(Window(home).Property(WidgetFocus3),2)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="String.IsEqual(Window(home).Property(WidgetFocus3),2) + !Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160032</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160032</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160032</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160032</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160032</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<height>315</height>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<autoscroll time="200000">!Control.HasFocus(160032) | [Control.HasFocus(160032) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160032,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="true">SetProperty(WidgetFocus3,3,home)</onup>
				<onup condition="true">SetFocus(160033)</onup>
				<onup condition="!true">ClearProperty(WidgetFocus3,home)</onup>
				<onup condition="!true">SetFocus(160031)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160032</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">ListDetailsSmall</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">47</param>
					<param name="textbackheight">56</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id1">160032</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160032).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="pvr">pvr://channels/tv/*?view=lastplayed</content>
				</control>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<control type="group">
				<visible>Control.HasFocus(160042) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160042</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160042</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160042</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160042</param>
					<param name="label">$LOCALIZE[31461]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus4),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160042</param>
					<param name="label">$LOCALIZE[31461]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus4),2)</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160042</param>
					<param name="label">$LOCALIZE[31461]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus4),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160042</param>
					<param name="label">$LOCALIZE[31461]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus4),2)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160042">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160042)] | [!ControlGroup(700).HasFocus + !String.IsEqual(Window(home).Property(WidgetFocus4),2)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="String.IsEqual(Window(home).Property(WidgetFocus4),2) + !Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160042</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160042</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160042</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160042</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160042</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<height>315</height>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<autoscroll time="200000">!Control.HasFocus(160042) | [Control.HasFocus(160042) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160042,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="true">SetProperty(WidgetFocus4,3,home)</onup>
				<onup condition="true">SetFocus(160043)</onup>
				<onup condition="!true">ClearProperty(WidgetFocus4,home)</onup>
				<onup condition="!true">SetFocus(160041)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160042</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id1">160042</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160042).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="pvr">pvr://channels/radio/*?view=lastplayed</content>
				</control>
			</control>
		</include>
	<include name="skinshortcuts-template-shelfgroup3">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-shelfgroup3-Master user</include>
		</include>
	<include name="skinshortcuts-template-shelfgroup3-Master user">
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-20342)</visible>
			<control type="group">
				<visible>Control.HasFocus(160013) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160013</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160013</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160013</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160013</param>
					<param name="label">$LOCALIZE[31424]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus1),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160013</param>
					<param name="label">$LOCALIZE[31424]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus1),3)</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160013</param>
					<param name="label">$LOCALIZE[31424]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus1),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160013</param>
					<param name="label">$LOCALIZE[31424]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus1),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160013">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160013)] | [!ControlGroup(700).HasFocus + !String.IsEqual(Window(home).Property(WidgetFocus1),3)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160013</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160013</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160013</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160013</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160013</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<height>315</height>
				<autoscroll time="200000">!Control.HasFocus(160013) | [Control.HasFocus(160013) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160013,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="false">SetProperty(WidgetFocus1,4,home)</onup>
				<onup condition="false">SetFocus(160014)</onup>
				<onup condition="!false">ClearProperty(WidgetFocus1,home)</onup>
				<onup condition="!false">SetFocus(160011)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160013</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="[!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160013</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160013).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="videos">special://skin/extras/playlists/movies_random.xsp</content>
				</control>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<control type="group">
				<visible>Control.HasFocus(160023) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160023</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160023</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160023</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160023</param>
					<param name="label">$LOCALIZE[31434]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160023</param>
					<param name="label">$LOCALIZE[31434]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),3)</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160023</param>
					<param name="label">$LOCALIZE[31434]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160023</param>
					<param name="label">$LOCALIZE[31434]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160023">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160023)] | [!ControlGroup(700).HasFocus + !String.IsEqual(Window(home).Property(WidgetFocus2),3)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160023</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160023</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160023</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160023</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160023</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<height>315</height>
				<autoscroll time="200000">!Control.HasFocus(160023) | [Control.HasFocus(160023) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160023,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="true">SetProperty(WidgetFocus2,4,home)</onup>
				<onup condition="true">SetFocus(160024)</onup>
				<onup condition="!true">ClearProperty(WidgetFocus2,home)</onup>
				<onup condition="!true">SetFocus(160021)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160023</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="[!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160023</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160023).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="videos">$VAR[RecentlyPlayedTVShowsVar]</content>
				</control>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31500)</visible>
			<control type="group">
				<visible>Control.HasFocus(160033) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160033</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160033</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160033</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160033</param>
					<param name="label">$LOCALIZE[31455]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus3),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160033</param>
					<param name="label">$LOCALIZE[31455]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus3),3)</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160033</param>
					<param name="label">$LOCALIZE[31455]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus3),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160033</param>
					<param name="label">$LOCALIZE[31455]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus3),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160033">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160033)] | [!ControlGroup(700).HasFocus + !String.IsEqual(Window(home).Property(WidgetFocus3),3)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160033</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160033</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160033</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160033</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160033</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<height>315</height>
				<autoscroll time="200000">!Control.HasFocus(160033) | [Control.HasFocus(160033) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160033,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="false">SetProperty(WidgetFocus3,4,home)</onup>
				<onup condition="false">SetFocus(160034)</onup>
				<onup condition="!false">ClearProperty(WidgetFocus3,home)</onup>
				<onup condition="!false">SetFocus(160031)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160033</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">ListDetailsSmall</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">47</param>
					<param name="textbackheight">56</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="[!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160033</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160033).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="pvr">pvr://recordings/tv/active?view=flat</content>
				</control>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-31509)</visible>
			<control type="group">
				<visible>Control.HasFocus(160043) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160043</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160043</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160043</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160043</param>
					<param name="label">$LOCALIZE[31462]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus4),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160043</param>
					<param name="label">$LOCALIZE[31462]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus4),3)</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160043</param>
					<param name="label">$LOCALIZE[31462]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus4),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160043</param>
					<param name="label">$LOCALIZE[31462]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus4),3)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160043">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160043)] | [!ControlGroup(700).HasFocus + !String.IsEqual(Window(home).Property(WidgetFocus4),3)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160043</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160043</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160043</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160043</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160043</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<height>315</height>
				<autoscroll time="200000">!Control.HasFocus(160043) | [Control.HasFocus(160043) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160043,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="false">SetProperty(WidgetFocus4,4,home)</onup>
				<onup condition="false">SetFocus(160044)</onup>
				<onup condition="!false">ClearProperty(WidgetFocus4,home)</onup>
				<onup condition="!false">SetFocus(160041)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160043</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="[!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160043</param>
					<param name="iconimage">$VAR[Square]</param>
					<param name="overlaylabel">$VAR[ShelfSeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">keep</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">228</param>
					<param name="iconheightmed">182</param>
					<param name="iconheightsmall">159</param>
					<param name="align">center</param>
					<param name="textboxvisibility">true</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">true</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160043).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="pvr">pvr://recordings/radio/active?view=flat</content>
				</control>
			</control>
		</include>
	<include name="skinshortcuts-template-shelfgroup4">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-shelfgroup4-Master user</include>
		</include>
	<include name="skinshortcuts-template-shelfgroup4-Master user">
		<control type="group">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),tvshows)</visible>
			<control type="group">
				<visible>Control.HasFocus(160024) + false</visible>
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTopVert</include>
				<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTopHorz</include>
				<left>0</left>
				<control type="group">
					<animation effect="fade" end="0">WindowClose</animation>
					<control type="image">
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVert</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertIcon</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfInfoBackCoordsVertHideFocus</include>
						<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoBackCoordsHorz</include>
						<texture colordiffuse="CFFFFFFF">img/list_shadow.png</texture>
						</control>
					<control type="group">
						<include condition="!Skin.HasSetting(VerticalHome) | [Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)]" content="ShelfInfoContent">
							<param name="id">160024</param>
							<param name="width">1850</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160024</param>
							<param name="width">1420</param>
							</include>
						<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfInfoContent">
							<param name="id">160024</param>
							<param name="width">1740</param>
							</include>
						</control>
					</control>
				</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include content="WidgetBackground" condition="[!Skin.HasSetting(Enable.BottomShortcuts) | Skin.HasSetting(VerticalHome)] + !false">
					<param name="id">160024</param>
					<param name="label">$LOCALIZE[31435]</param>
					<param name="labelscroll">false</param>
					<param name="top">327</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),4)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">true</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">
					<param name="id">160024</param>
					<param name="label">$LOCALIZE[31435]</param>
					<param name="labelscroll">false</param>
					<param name="top">170</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),4)</param>
					<param name="ShowMediumLogo">!false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					</include>
				<include content="WidgetBackground" condition="!Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Enable.BottomShortcuts) + false">
					<param name="id">160024</param>
					<param name="label">$LOCALIZE[31435]</param>
					<param name="labelscroll">false</param>
					<param name="top">534</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),4)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLarge2Logo">false</param>
					</include>
				<include content="WidgetBackground" condition="Skin.HasSetting(VerticalHome) + false">
					<param name="id">160024</param>
					<param name="label">$LOCALIZE[31435]</param>
					<param name="labelscroll">false</param>
					<param name="top">594</param>
					<param name="height">375</param>
					<param name="visible">String.IsEqual(Window(home).Property(WidgetFocus2),4)</param>
					<param name="ShowMediumLogo">false</param>
					<param name="ShowMedium2Logo">false</param>
					<param name="ShowLargeLogo">false</param>
					<param name="ShowLargeLogoUnfocused">true</param>
					</include>
				</control>
			<control type="panel" id="160024">
				<include condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)">StaticWidgetPositioning</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningHorz</include>
				<include condition="Skin.HasSetting(VerticalHome) + false">ShelfInfoWidgetPositioningVert</include>
				<animation effect="fade" start="100" end="0" time="100" condition="[ControlGroup(700).HasFocus + !Control.HasFocus(160024)] | [!ControlGroup(700).HasFocus + !String.IsEqual(Window(home).Property(WidgetFocus2),4)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,364" time="250" tween="sine" easing="in" condition="!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts) + false + ControlGroup(700).HasFocus">Conditional</animation>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + !Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160024</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					</include>
				<include condition="!Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Enable.BottomShortcuts)" content="ShelfCenterAnimationsHoriz">
					<param name="id">160024</param>
					<param name="center228">true</param>
					<param name="center295">false</param>
					<param name="center315">false</param>
					<param name="center376">false</param>
					<param name="center385">false</param>
					<param name="center500">false</param>
					<param name="center668">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVert">
					<param name="id">160024</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + false + !false" content="ShelfCenterAnimationsVertIcons">
					<param name="id">160024</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<include condition="Skin.HasSetting(VerticalHome) + false + !false + Skin.HasSetting(Vertical.HideFocusShelves)" content="ShelfCenterAnimationsVertHiddenMenu">
					<param name="id">160024</param>
					<param name="center228">true</param>
					<param name="center228double">false</param>
					<param name="center228triplemed">false</param>
					<param name="center295">false</param>
					<param name="center295double">false</param>
					<param name="center295triplemed">false</param>
					<param name="center315">false</param>
					<param name="center315double">false</param>
					<param name="center315triplemed">false</param>
					<param name="center376">false</param>
					<param name="center376double">false</param>
					<param name="center376triplemed">false</param>
					<param name="center385">false</param>
					<param name="center385double">false</param>
					<param name="center500">false</param>
					<param name="center500double">false</param>
					<param name="center500triplemed">false</param>
					<param name="center668">false</param>
					<param name="center668double">false</param>
					<param name="center668triplemed">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					</include>
				<top>327</top>
				<left>32</left>
				<right>0</right>
				<include condition="Skin.HasSetting(VerticalHome) + !Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertText</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.IconOnly) + !Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertIcon</include>
				<include condition="Skin.HasSetting(VerticalHome) + Skin.HasSetting(Vertical.HideFocusShelves)">ShelfWidthVertHiddenMenu</include>
				<height>315</height>
				<autoscroll time="200000">!Control.HasFocus(160024) | [Control.HasFocus(160024) + false]</autoscroll>
				<onfocus>SetProperty(TMDbHelper.WidgetContainer,160024,Home)</onfocus>
				<onclick condition="System.HasAddon(script.playalbum) + Skin.HasSetting(Shelf.PlayAlbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
				<onup condition="false">SetProperty(WidgetFocus2,5,home)</onup>
				<onup condition="false">SetFocus(160025)</onup>
				<onup condition="!false">ClearProperty(WidgetFocus2,home)</onup>
				<onup condition="!false">SetFocus(160021)</onup>
				<onup>ClearProperty(ShowWidgetPopup,Home)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying)) + Player.HasVideo">PlayerControl(Stop)</onup>
				<onup condition="!String.IsEmpty(Window(Home).Property(ShelfTrailerPlaying))">ClearProperty(ShelfTrailerPlaying,Home)</onup>
				<ondown>300</ondown>
				<onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
				<onback>300</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<include content="Shelf_Generic1" condition="![!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160024</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<include content="Shelf_Generic1" condition="[!Skin.HasSetting(VerticalHome) + Skin.HasSetting(Enable.BottomShortcuts)]">
					<param name="id1">160024</param>
					<param name="iconimage">$VAR[Poster]</param>
					<param name="overlaylabel">$VAR[SeasonEpisodeLabel]</param>
					<param name="labelvisibility">false</param>
					<param name="textboxfont">Shelf_Label</param>
					<param name="textboxwidth">204</param>
					<param name="textboxheight">64</param>
					<param name="textbackheight">74</param>
					<param name="aspect">stretch</param>
					<param name="labelfont">Shelf_Label</param>
					<param name="isTripleRowMedium">false</param>
					<param name="isTripleRowLarge">false</param>
					<param name="isTripleRow">false</param>
					<param name="showOverlay">true</param>
					<param name="showLabelFallback">false</param>
					<param name="artworkheightbig">315</param>
					<param name="artworkheightmed">252</param>
					<param name="artworkheightsmall">220</param>
					<param name="artworkwidthbig">228</param>
					<param name="artworkwidthmed">182</param>
					<param name="artworkwidthsmall">159</param>
					<param name="iconheightbig">315</param>
					<param name="iconheightmed">252</param>
					<param name="iconheightsmall">220</param>
					<param name="align">center</param>
					<param name="textboxvisibility">false</param>
					<param name="isWideIcon">false</param>
					<param name="isSquare">false</param>
					<param name="isThumb">false</param>
					<param name="doInfoPopup">false</param>
					<param name="widgetPopupDelay">$NUMBER[3]</param>
					<param name="overlaylabelyoffset">65r</param>
					</include>
				<content>
					<item>
						<icon>DefaultAddonNone.png</icon>
						<thumb>DefaultAddonNone.png</thumb>
						<visible>String.IsEmpty(Container(160024).ListItem(1).Label)</visible>
						</item>
					</content>
				<content sortby="" sortorder="" limit="$NUMBER[25]" target="videos">special://skin/extras/playlists/tvshows_random.xsp</content>
				</control>
			</control>
		</include>
	<include name="skinshortcuts-template-shelfgroup5">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-shelfgroup6">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-shelfgroup2shelvesbackground">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-shelfgroup3shelvesbackground">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-shelfgroup3shelvesbackgroundlarge">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-BottomShortcuts">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-WeatherContentHourly">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-ShortWeatherContentHourly">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-WeatherContentDaily">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-ShortWeatherContentDaily">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-FavouriteContent">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-FavouriteAddonsContent">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-SystemContent">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-NextAiredContent">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-RecommendedEpisodesContent">
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	</includes>
